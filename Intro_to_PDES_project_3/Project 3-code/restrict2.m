function coarse = restrict2(fine) 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  restriction routine (full weighting) 
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

   [r,c] = size(fine);
   n = r-1;
   m = c-1; 
   n2 = n/2;
   m2 = m/2;

   coarse = zeros(n2+1,m2+1); 
   coarse(2:n2,2:m2) =  1/4*fine(3:2:n-1, 3:2:m-1) + ...
                         1/8*fine(2:2:n-2, 3:2:m-1) + ...
                         1/8*fine(4:2:n,   3:2:m-1) + ...
                         1/8*fine(3:2:n-1, 2:2:m-2) + ...
                         1/8*fine(3:2:n-1, 4:2:m)   + ...
                         1/16*fine(2:2:n-2,2:2:m-2) + ...
                         1/16*fine(2:2:n-2,4:2:m)   + ...
                         1/16*fine(4:2:n,  2:2:m-2) + ...
                         1/16*fine(4:2:n,  4:2:m);

                     %alter boundaries not including corners                  
coarse(1,2:m2)=1/4*fine(1,3:2:m-1)+ ...
                1/8*fine(1, 2:2:m-2) + ...
                1/8*fine(1, 3:2:m) + ...
                1/4*fine(2,3:2:m-1)+ ...
                1/8*fine(2, 2:2:m-2) + ...
                1/8*fine(2, 2:2:m-2);
            
coarse(n2+1,2:m2)=1/4*fine(n+1,3:2:m-1)+ ...
                1/8*fine(n+1, 2:2:m-2) + ...
                1/8*fine(n+1, 3:2:m) + ...
                1/4*fine(n,3:2:m-1)+ ...
                1/8*fine(n, 2:2:m-2) + ...
                1/8*fine(n, 2:2:m-2);
            
coarse(2:n2,1)=1/4*fine(3:2:n-1,1)+ ...
                1/8*fine(2:2:n-2,1) + ...
                1/8*fine(3:2:n,1) + ...
                1/4*fine(3:2:n-1,2)+ ...
                1/8*fine(2:2:n-2,2) + ...
                1/8*fine(2:2:n-2,2); 
            
coarse(2:n2,m2+1)=1/4*fine(3:2:n-1,m+1)+ ...
                1/8*fine( 2:2:n-2,m+1) + ...
                1/8*fine(3:2:n, m+1) + ...
                1/4*fine(3:2:n-1,m)+ ...
                1/8*fine( 2:2:n-2,m) + ...
                1/8*fine( 2:2:n-2,m);
  %alter corners 
%  coarse(1,1)=1/2*fine(1,1)+5/24*fine(1,2)+5/24*fine(2,1)+2/24*fine(2,2);
%  coarse(n2+1,1)=1/2*fine(n+1,1)+5/24*fine(n,1)+5/24*fine(n+1,2)+2/24*fine(n,2);          
%  coarse(n2+1,m2+1)=1/2*fine(n+1,m+1)+5/24*fine(n,m+1)+5/24*fine(n+1,m)+2/24*fine(n,m);           
%  coarse(1,m2+1)=1/2*fine(1,m+1)+5/24*fine(1,m)+5/24*fine(2,m+1)+2/24*fine(2,m);           

 
 coarse(1,1)=1/4*fine(1,1)+1/4*fine(1,2)+1/4*fine(2,1)+1/4*fine(2,2);
 coarse(n2+1,1)=1/4*fine(n+1,1)+1/4*fine(n,1)+1/4*fine(n+1,2)+1/4*fine(n,2);          
 coarse(n2+1,m2+1)=1/4*fine(n+1,m+1)+1/4*fine(n,m+1)+1/4*fine(n+1,m)+1/4*fine(n,m);           
 coarse(1,m2+1)=1/4*fine(1,m+1)+1/4*fine(1,m)+1/4*fine(2,m+1)+1/4*fine(2,m);  
 
 
 
 
end
                     

%   this line alone would be the simple mapping
%   Acoarse(2:n2,2:m2) =  Afine(3:2:n-1, 3:2:m-1);


